---
swagger: '2.0'
info:
  version: 1.0.0
  title: Filters, Filter Chain and Provider Rest endpoints
  description: Management of security filters, filter chains and prover endpoints
  contact:
    name: GeoServer
    email: 'geoserver-users@osgeo.org'
    url: 'https://geoserver.org/comm/'
securityDefinitions:
    basicAuth: # <-- arbitrary name for the security scheme
      type: basic
      description: The user name and password of a admin user.

schemes:
  - https
  - http
host: localhost
basePath: /geoserver/rest/security

paths:
  /authFilters:
    get:
      security:
        - basicAuth: []
      operationId: listAuthFilters
      tags:
        - "AuthFilters"
      summary: List all the auth filters available in the system.
      description: List all the auth filters available in the system.
      produces:
        - application/xml
        - application/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/AuthFilters"
          examples:
            application/xml: |
              <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
              <authFilters>
                <authFilter>
                  <config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="anonymousAuthenticationFilterConfig">
                    <className>org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter</className>
                  </config>
                  <id>-3737ce2b:196b56d5575:-7fed</id>
                  <name>anonymous</name>
                </authFilter>
              </authFilters>
            application/json: |
              {
              "filters": [
                {
                  "id": "-3737ce2b:196b56d5575:-7fed",
                  "name": "anonymous",
                  "config": {
                    "@class": "org.geoserver.security.config.AnonymousAuthenticationFilterConfig",
                    "className": "org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter"
                  }
                }
              ]}
        500:
          description: INTERNAL_SERVER_ERROR
    post:
      security:
        - basicAuth: []
      operationId: createAuthFilter
      description: | 
        This method will create the specified authentication filter on the server. 
        The name of the filter must be unique. It expects the id field to be
        omitted as the server will generate this value.
      tags:
        - "AuthFilters"
      summary: Create a new auth filter
      consumes:
        - application/xml
        - application/json
      produces:
        - application/xml
        - application/json
      responses:
        201:
          description: |
            The filter configuration has been saved on the server
          schema:
            $ref: "#/definitions/AuthFilter"

          examples:
            application/xml: |

        400:
          description: |
            The data supplied by the client was invalid. Typically check that the name 
            is unqiue and that no id is supplied.
  /authFilters/{filterName}:
    get:
      security:
        - basicAuth: []
      operationId: viewAuthFilter
      tags:
        - "AuthFilters"
      summary: Views the details of a single filter.
      description: |
        Displays the contents of the configuration object on the server.
      produces:
        - application/xml
        - application/json
      responses:
        200:
          description: |
            The request completed successfully and the name filter configuration 
            has been returned.
          schema:
            $ref: "#/definitions/AuthFilter"
        404:
          description: |
            The named configuration does not exist on the server
        500:
          description: |
            A problem occurred within the server, this cannot be fixed by changing the data
            in the request contact you administrator
    put:
      security:
        - basicAuth: []
      operationId: updateAuthFilter
      tags:
        - "AuthFilters"
      summary: Update the named filter configuration.
      description: |
        Update the named filter configuration.
      consumes:
        - application/xml
        - application/json
      produces:
        - application/xml
        - application/json
      responses:
        200:
          description: |
            The configuration has been updated
          schema:
            $ref: "#/definitions/AuthFilters"
        400:
          description: |
            The filter configuration cannot be updated. Check that the supplied name matches
            the name in the body of the request. Check that the Id matches the Id of the 
            configuration in memory. Check all required fields the type of authentication
            filter have been supplied.
        500:
          description: |
            The server is experiencing some issue. If this persists contact your administrator.
    delete:
      security:
        - basicAuth: []
      operationId: deleteAuthFilter
      tags:
        - "AuthFilters"
      summary: Deletes the named filter.
      description: |
        Removes the authentication configuration from the server.
      responses:
        200:
          description: |
            The authentication filter was successfully removed
        410:
          description: |
            The authentication filter does not exist or has already been removed
        500:
          description: |
            The server is experiencing some issue. If this persists contact your administrator.


definitions:
  AuthFilters:
    title: Auth Filters
    type: array
    items:
      $ref: "#/definitions/AuthFilter"
  AuthFilter:
    title: Auth Filter
    type: object
    properties:
      id:
        type: string
        description: |
          The unique id assigned to the configuration by geoserver
      name:
        type: string
        description: |
          The unique name assigned to the configuration by client
      config:
        type: object
        description: |
          Bespoke configuration fields required by the specific type
          of authentication filter
        properties:
          className:
            type: string
            description: |
              The className of the actual filter class used in geoserver
          AnyValue: {}
        required:
          - className
    required:
      - id
      - name
      - config
